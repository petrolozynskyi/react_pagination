{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","currentPage","perPage","onPageChange","totalPages","Math","ceil","pageNumbers","Array","from","length","_","index","className","href","map","pageNumber","onClick","itemsPerPageOptions","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","items","to","numbers","n","push","getNumbers","slice","startIndex","endIndex","min","id","value","onChange","event","newItemsPerPage","parseInt","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"8KASaA,EAAwC,SAAC,GAK/C,IAAD,IAJJC,aAII,MAJI,GAIJ,EAHJC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQE,GAC/BK,EAAcC,MAAMC,KAAK,CAAEC,OAAQN,IACvC,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAExB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAU,qBAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,OAJhB,oBAUDP,EAAYQ,KAAI,SAACC,GAAD,OACf,oBAEEH,UAAS,oBAAeG,IAAef,EAAc,SAAW,IAFlE,SAIE,mBACE,UAAQ,WACRY,UAAU,YACVC,KAAI,WAAME,GACVC,QAAS,kBAAMd,EAAaa,IAJ9B,SAMGA,KATEA,MAcT,oBAAIH,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,QAJhB,wBC5CFI,EAAsB,CAAC,EAAG,EAAG,GAAI,IAE1BC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBoB,EAApB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,ECXD,SAAoBf,EAAcgB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIlB,EAAMkB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDIiBG,CAAW,EAAG,IACnCd,KAAI,SAACY,GAAD,qBAAeA,MACnBG,OAAO7B,EAAc,GAAKqB,EAAcrB,EAAcqB,GAenDS,GAAc9B,EAAc,GAAKqB,EAAe,EAChDU,EAAW3B,KAAK4B,IAAIF,EAAaT,EAAe,EAFnC,IAInB,OACE,sBAAKT,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiC8B,EADjC,cACiDC,EADjD,aAIA,sBAAKnB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOb,EACPc,SA1BR,SAACC,GACD,IAAMC,EAAkBC,SAASF,EAAMG,OAAOL,MAAO,IAErDZ,EAAgBe,GAChBjB,EAAe,IAiBT,SAOGH,EAAoBH,KAAI,SAAC0B,GAAD,OACvB,wBAAqBN,MAAOM,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAO,GACPC,YAAaA,EACbC,QAASoB,EACTnB,aAlDmB,SAACa,GACxBK,EAAeL,MAoDb,6BACGQ,EAAMT,KAAI,SAAC4B,EAAM/B,GAAP,OAET,aADA,CACA,MAAgB,UAAQ,OAAxB,SACG+B,GADM/B,YEpEnBgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.8b2183ae.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  currentPage: number;\n  perPage: number;\n  onPageChange: (pageNumber: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total = 42,\n  currentPage,\n  perPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pageNumbers = Array.from({ length: totalPages },\n    (_, index) => index + 1);\n\n  return (\n    <ul className=\"pagination\">\n      <li className=\"page-item disabled\">\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map((pageNumber) => (\n        <li\n          key={pageNumber}\n          className={`page-item ${pageNumber === currentPage ? 'active' : ''}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li className=\"page-item\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst itemsPerPageOptions = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const items: string[] = getNumbers(1, 42)\n    .map((n) => `Item ${n}`)\n    .slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handleItemsPerPageChange\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newItemsPerPage = parseInt(event.target.value, 10);\n\n    setItemsPerPage(newItemsPerPage);\n    setCurrentPage(1);\n  };\n\n  const totalItems = 42;\n  const startIndex = (currentPage - 1) * itemsPerPage + 1;\n  const endIndex = Math.min(startIndex + itemsPerPage - 1, totalItems);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex} - ${endIndex} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPageChange}\n          >\n            {itemsPerPageOptions.map((option) => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={42}\n        currentPage={currentPage}\n        perPage={itemsPerPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.map((item, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <li key={index} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}